1. Navigate to the appropriate PostgreSQL directory on your system. Find the configuration files for your instance and display the contents of the directory.

    root@tcox5:~# cd /etc/postgresql/9.3/main/

    root@tcox5:/etc/postgresql/9.3/main# ll

    total 56

    drwxr-xr-x 2 postgres postgres  4096 Sep  2 14:02 ./

    drwxr-xr-x 3 postgres postgres  4096 Sep  2 14:02 ../

    -rw-r--r-- 1 postgres postgres   315 Sep  2 14:02 environment

    -rw-r--r-- 1 postgres postgres   143 Sep  2 14:02 pg_ctl.conf

    -rw-r----- 1 postgres postgres  4649 Sep  2 14:02 pg_hba.conf

    -rw-r----- 1 postgres postgres  1636 Sep  2 14:02 pg_ident.conf

    -rw-r--r-- 1 postgres postgres 20706 Sep  2 14:02 postgresql.conf

    -rw-r--r-- 1 postgres postgres   378 Sep  2 14:02 start.conf

 

2. Edit the appropriate configuration file to enable the MD5 type of authentication for your database for:

* Localhost

* IPv6 Networks

* Your local (internal) Linux Academy Lab Server network (Class C full)

    root@tcox5:/etc/postgresql/9.3/main# ifconfig

    eth0      Link encap:Ethernet  HWaddr 12:69:95:5b:da:95

              inet addr:172.31.111.207  Bcast:172.31.111.255  Mask:255.255.240.0

              inet6 addr: fe80::1069:95ff:fe5b:da95/64 Scope:Link

              UP BROADCAST RUNNING MULTICAST  MTU:9001  Metric:1

              RX packets:2383 errors:0 dropped:0 overruns:0 frame:0

              TX packets:1150 errors:0 dropped:0 overruns:0 carrier:0

              collisions:0 txqueuelen:1000

              RX bytes:2142749 (2.1 MB)  TX bytes:117252 (117.2 KB)

     

    lo        Link encap:Local Loopback

              inet addr:127.0.0.1  Mask:255.0.0.0

              inet6 addr: ::1/128 Scope:Host

              UP LOOPBACK RUNNING  MTU:65536  Metric:1

              RX packets:187 errors:0 dropped:0 overruns:0 frame:0

              TX packets:187 errors:0 dropped:0 overruns:0 carrier:0

              collisions:0 txqueuelen:0

              RX bytes:35054 (35.0 KB)  TX bytes:35054 (35.0 KB)

     

    root@tcox5:/etc/postgresql/9.3/main# vim pg_hba.conf

    root@tcox5:/etc/postgresql/9.3/main# cat pg_hba.conf

    # PostgreSQL Client Authentication Configuration File

    # ===================================================

    #

    # Refer to the "Client Authentication" section in the PostgreSQL

    # documentation for a complete description of this file.  A short

    # synopsis follows.

    #

    # This file controls: which hosts are allowed to connect, how clients

    # are authenticated, which PostgreSQL user names they can use, which

    # databases they can access.  Records take one of these forms:

    #

    # local      DATABASE  USER  METHOD  [OPTIONS]

    # host       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]

    # hostssl    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]

    # hostnossl  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]

    #

    # (The uppercase items must be replaced by actual values.)

    #

    # The first field is the connection type: "local" is a Unix-domain

    # socket, "host" is either a plain or SSL-encrypted TCP/IP socket,

    # "hostssl" is an SSL-encrypted TCP/IP socket, and "hostnossl" is a

    # plain TCP/IP socket.

    #

    # DATABASE can be "all", "sameuser", "samerole", "replication", a

    # database name, or a comma-separated list thereof. The "all"

    # keyword does not match "replication". Access to replication

    # must be enabled in a separate record (see example below).

    #

    # USER can be "all", a user name, a group name prefixed with "+", or a

    # comma-separated list thereof.  In both the DATABASE and USER fields

    # you can also write a file name prefixed with "@" to include names

    # from a separate file.

    #

    # ADDRESS specifies the set of hosts the record matches.  It can be a

    # host name, or it is made up of an IP address and a CIDR mask that is

    # an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that

    # specifies the number of significant bits in the mask.  A host name

    # that starts with a dot (.) matches a suffix of the actual host name.

    # Alternatively, you can write an IP address and netmask in separate

    # columns to specify the set of hosts.  Instead of a CIDR-address, you

    # can write "samehost" to match any of the server's own IP addresses,

    # or "samenet" to match any address in any subnet that the server is

    # directly connected to.

    #

    # METHOD can be "trust", "reject", "md5", "password", "gss", "sspi",

    # "krb5", "ident", "peer", "pam", "ldap", "radius" or "cert".  Note that

    # "password" sends passwords in clear text; "md5" is preferred since

    # it sends encrypted passwords.

    #

    # OPTIONS are a set of options for the authentication in the format

    # NAME=VALUE.  The available options depend on the different

    # authentication methods -- refer to the "Client Authentication"

    # section in the documentation for a list of which options are

    # available for which authentication methods.

    #

    # Database and user names containing spaces, commas, quotes and other

    # special characters must be quoted.  Quoting one of the keywords

    # "all", "sameuser", "samerole" or "replication" makes the name lose

    # its special character, and just match a database or username with

    # that name.

    #

    # This file is read on server startup and when the postmaster receives

    # a SIGHUP signal.  If you edit the file on a running system, you have

    # to SIGHUP the postmaster for the changes to take effect.  You can

    # use "pg_ctl reload" to do that.

     

    # Put your actual configuration here

    # ----------------------------------

    #

    # If you want to allow non-local connections, you need to add more

    # "host" records.  In that case you will also need to make PostgreSQL

    # listen on a non-local interface via the listen_addresses

    # configuration parameter, or via the -i or -h command line switches.

     

     

     

     

    # DO NOT DISABLE!

    # If you change this first entry you will need to make sure that the

    # database superuser can access the database using some other method.

    # Noninteractive access to all databases is required during automatic

    # maintenance (custom daily cronjobs, replication, and similar tasks).

    #

    # Database administrative login by Unix domain socket

    local   all             postgres                                peer

     

    # TYPE  DATABASE        USER            ADDRESS                 METHOD

     

    # "local" is for Unix domain socket connections only

    local   all             all                                     md5

    # IPv4 local connections:

    host    all             all             127.0.0.1/32            md5

    host    all             all             172.31.111.0/24         md5

    # IPv6 local connections:

    host    all             all             ::1/128                 md5

    # Allow replication connections from localhost, by a user with the

    # replication privilege.

    #local   replication     postgres                                peer

    #host    replication     postgres        127.0.0.1/32            md5

    #host    replication     postgres        ::1/128                 md5

 

3. Enable TCP connections from outside the current host. Edit the appropriate file and add the specific sections that allow external connections and define the appropriate port to listen on.

root@tcox5:/etc/postgresql/9.3/main# vim postgresql.conf

    (NOTE: The entire file is not posted, only the relevant section)

    ...

    #------------------------------------------------------------------------------

    # CONNECTIONS AND AUTHENTICATION

    #------------------------------------------------------------------------------

     

    # - Connection Settings -

     

    #listen_addresses = 'localhost'         # what IP address(es) to listen on;

    listen_addresses = '*'

                                            # comma-separated list of addresses;

                                            # defaults to 'localhost'; use '*' for all

                                            # (change requires restart)

    port = 5432                             # (change requires restart)

    max_connections = 100                   # (change requires restart)

    # Note:  Increasing max_connections costs ~400 bytes of shared memory per

    # connection slot, plus lock space (see max_locks_per_transaction).

     
